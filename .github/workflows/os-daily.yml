name: enc

on:
  schedule:
    - cron: '0 0 * * *'  # 每天执行一次
  workflow_dispatch:

jobs:
  encrypt-token:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl python3-pip
          pip install pycryptodome

      - name: Get token, encrypt, and save
        env:
          BE_POST: ${{ secrets.BE_POST }}
          BE_HOST: ${{ secrets.BE_HOST }}
          BE_CT: ${{ secrets.BE_CT }}
          BE_UA: ${{ secrets.BE_UA }}
          BE_BODY: ${{ secrets.BE_BODY }}
          BE_K: ${{ secrets.BE_K }}
          BE_V: ${{ secrets.BE_V }}
        run: |
          echo "1️⃣ 获取 Bemfa token…"
          token=$(curl -sS -X POST "$BE_POST" \
            -H "$BE_HOST" \
            -H "$BE_CT" \
            -H "$BE_UA" \
            -d "$BE_BODY" \
            | jq -r '.data.token')
          
          if [ -z "$token" ] || [ "$token" = "null" ]; then
            echo "❌ 获取 token 失败！"
            exit 1
          fi
          echo "✅ token 获取成功: $token"

          echo "2️⃣ 使用 Python 加密 token…"
          python3 - <<'EOF'
          import os, base64
          from Crypto.Cipher import AES
          from Crypto.Util.Padding import pad

          key = bytes.fromhex(os.environ['BE_K'])
          iv = bytes.fromhex(os.environ['BE_V'])
          token = os.environ['token']

          cipher = AES.new(key, AES.MODE_CBC, iv)
          encrypted = cipher.encrypt(pad(token.encode(), AES.block_size))
          enc_base64 = base64.b64encode(encrypted).decode()

          with open("t.c", "w") as f:
              f.write(enc_base64)
          print("✅ 已写入加密 token 到 t.c")
          EOF

      - name: Commit encrypted token
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add t.c
          git commit -m "Update encrypted token [skip ci]" || echo "No changes"
          git push
