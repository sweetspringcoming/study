name: os-daily

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  check-os:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl python3-pip
          pip3 install pycryptodome

      - name: Get Bemfa token
        env:
          BE_POST: ${{ secrets.BE_POST }}
          BE_HOST: ${{ secrets.BE_HOST }}
          BE_CT: ${{ secrets.BE_CT }}
          BE_UA: ${{ secrets.BE_UA }}
          BE_BODY: ${{ secrets.BE_BODY }}
        run: |
          echo "1️⃣ 获取 Bemfa token…"
          retries=0
          max_retries=2
          while [ $retries -le $max_retries ]; do
            TOKEN=$(curl -sS -X POST "$BE_POST" \
              -H "$BE_HOST" \
              -H "$BE_CT" \
              -H "$BE_UA" \
              -d "$BE_BODY" \
              | jq -r '.data.token')
            if [ -n "$TOKEN" ] && [ "$TOKEN" != "null" ]; then
              echo "✅ token 获取成功"
              echo "TOKEN=$TOKEN" >> $GITHUB_ENV
              break
            else
              echo "⚠️ 第 $((retries+1)) 次请求失败，重试…"
              sleep 3
              retries=$((retries+1))
            fi
          done
          if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
            echo "❌ 获取 token 失败，多次尝试后仍然失败"
            exit 1
          fi

      - name: Encrypt token and write t.c
        env:
          TOKEN: ${{ env.TOKEN }}
          BE_K: ${{ secrets.BE_K }}
          BE_V: ${{ secrets.BE_V }}
        run: python3 - <<'EOF'
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad
import base64
import os

key = bytes.fromhex(os.environ['BE_K'])
iv = bytes.fromhex(os.environ['BE_V'])
token = os.environ['TOKEN']

cipher = AES.new(key, AES.MODE_CBC, iv)
ciphertext = cipher.encrypt(pad(token.encode(), AES.block_size))

with open("t.c", "w") as f:
    f.write(base64.b64encode(ciphertext).decode())

print("✅ 已写入 t.c")
EOF

      - name: Send Bemfa message
        env:
          BE_GET: ${{ secrets.BE_GET }}
          BE_HOST: ${{ secrets.BE_HOST }}
          BE_AU: ${{ secrets.BE_AU }}
          BE_AC: ${{ secrets.BE_AC }}
          TOKEN: ${{ env.TOKEN }}
        run: |
          echo "2️⃣ 发送消息到 Bemfa…"
          RESP=$(curl -sS -G "$BE_GET" \
            -H "$BE_HOST" \
            -H "$BE_AU $TOKEN" \
            -H "$BE_AC")
          echo "Bemfa 响应：$RESP"
