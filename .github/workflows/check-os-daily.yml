name: check-os-daily

on:
  schedule:
    - cron: "0 0 * * *"  # 每天 00:00 UTC 执行一次
  workflow_dispatch:

jobs:
  fetch-and-encrypt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pycryptodome

      - name: Fetch token and encrypt
        env:
          BE_POST: ${{ secrets.BE_POST }}
          BE_HOST: ${{ secrets.BE_HOST }}
          BE_CT: ${{ secrets.BE_CT }}
          BE_UA: ${{ secrets.BE_UA }}
          BE_BODY: ${{ secrets.BE_BODY }}
          BE_V: ${{ secrets.BE_V }}
          BE_K: ${{ secrets.BE_K }}
        run: |
          python - <<EOF
          import os
          import json
          import base64
          import requests
          from Crypto.Cipher import AES
          from Crypto.Util.Padding import pad

          # 从环境变量读取 Secrets
          url = os.environ["BE_POST"]
          headers = {
              "Host": os.environ["BE_HOST"].split(":",1)[1].strip(),
              "Content-Type": os.environ["BE_CT"],
              "User-Agent": os.environ["BE_UA"]
          }
          data = json.loads(os.environ["BE_BODY"])
          key = os.environ["BE_K"].encode('utf-8')
          iv = os.environ["BE_V"].encode('utf-8')

          # 1️⃣ 请求获取 token
          resp = requests.post(url, headers=headers, json=data, timeout=15)
          resp.raise_for_status()
          token = resp.json().get("data", {}).get("token")
          if not token:
              raise ValueError("❌ token 获取失败")

          # 2️⃣ AES-CBC 加密
          cipher = AES.new(key, AES.MODE_CBC, iv)
          encrypted = cipher.encrypt(pad(token.encode('utf-8'), AES.block_size))
          enc_b64 = base64.b64encode(encrypted).decode('utf-8')

          # 3️⃣ 写入 t.c 文件
          with open("t.c", "w") as f:
              f.write(enc_b64)

          print("✅ token 已加密并写入 t.c")
          EOF

      - name: Commit encrypted token
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add t.c
          git commit -m "Update encrypted token"
          git push
