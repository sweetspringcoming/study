name: Monitor remote os.c and notify Bemfa
permissions:
  contents: write

on:
  workflow_dispatch:

env:
  REMOTE_URL: ${{ secrets.REMOTE_URL }}
  BE_UID: ${{ secrets.BE_UID }}
  TOPIC: poweroff
  MSG: updata_os

jobs:
  check_and_notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch remote file and compute SHA
        id: check
        run: |
          set -euo pipefail
          echo "Fetching remote file..."
          curl -sS "${REMOTE_URL}" -o remote_os.c
          # Compute SHA
          remote_sha=$(sha256sum remote_os.c | awk '{print $1}')
          echo "remote_sha=$remote_sha" >> "$GITHUB_OUTPUT"
          # Read previous SHA
          prev_sha=""
          if [ -f last_hash.txt ]; then
            prev_sha=$(cat last_hash.txt | tr -d '[:space:]')
          fi
          echo "prev_sha=$prev_sha" >> "$GITHUB_OUTPUT"
          echo "remote_sha=$remote_sha, prev_sha=$prev_sha"

      - name: Compare and notify if changed
        if: steps.check.outputs.remote_sha != steps.check.outputs.prev_sha
        run: |
          set -euo pipefail
          echo "Remote file changed, sending MQTT message..."
          # 直接用 Python 调用 Bemfa MQTT
          python3 - <<'EOF'
import paho.mqtt.client as mqtt
import os

BEMFA_UID = os.environ['BE_UID']
TOPIC = os.environ['TOPIC']
MSG = os.environ['MSG']

client = mqtt.Client(client_id=BEMFA_UID)
client.connect("bemfa.com", 9501, keepalive=60)
client.loop_start()
client.publish(TOPIC, MSG)
client.loop_stop()
client.disconnect()
print("✅ MQTT message sent")
EOF
          # Save current SHA and file
          echo "${{ steps.check.outputs.remote_sha }}" > last_hash.txt
          cp remote_os.c last_remote_os.c
          # Commit changes if any
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add last_hash.txt last_remote_os.c
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "update hash"
            git push origin HEAD:refs/heads/${GITHUB_REF#refs/heads/} || echo "push failed"
          fi

      - name: No change - exit
        if: steps.check.outputs.remote_sha == steps.check.outputs.prev_sha
        run: echo "No change detected"
